---------NOTE :: move the spring.xml into src folder 

--------------------------service 

package test.wiprospringcc.service;

import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.xml.XmlBeanFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.core.io.FileSystemResource;

import test.wiprospringcc.model.Address;
import test.wiprospringcc.model.Student;

public class StudentService {

	public static void main(String[] args) {
		
		
			
	//BeanFactory factory=new XmlBeanFactory(new FileSystemResource("spring.xml"));
	
		
		ApplicationContext factory=new ClassPathXmlApplicationContext("spring.xml");
		((AbstractApplicationContext)(factory)).registerShutdownHook();
		
	Student student=(Student)factory.getBean("student");
	System.out.println("Student "+student);
	
	Student student1=(Student)factory.getBean("student");
	System.out.println("Student1 "+student1);
	
	System.out.println("-------after editing student name--------");
	student.setName("John Cena");
	System.out.println("Student "+student);
	System.out.println("Student1 "+student1);
	
	
	
	}

}
--------------------------student 

package test.wiprospringcc.model;


public class Student {

	private int rollNo;
	private String name ;
	
private Address address;
	

public void myInit()
{
System.out.println("bean is being created ");	
}
	


public void destroy()
{
System.out.println("bean is destroyed");	
}


public Student(int rollNo, String name, Address address) {
	
		super();
	System.out.println("int,str,address");
		this.rollNo = rollNo;
	this.name = name;
	this.address = address;
}
	public Address getAddress() {
	return address;
}
public void setAddress(Address address) {
System.out.println("setter called");
	this.address = address;
}
	public int getRollNo() {
		return rollNo;
	}
	public void setRollNo(int rollNo) {
		this.rollNo = rollNo;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	
	
	public Student( String name,int rollNo) {
		super();
		System.out.println("str,int");
		this.rollNo = rollNo;
		this.name = name;
	}
	
	
	public Student( String name,String rollNo) {
		super();
		System.out.println("str,str");
		
	}
	
	public Student(int rollNo, String name) {
		super();
		System.out.println("int,str");
		this.rollNo = rollNo;
		this.name = name;
	}
	
	
	public Student() {
		// TODO Auto-generated constructor stub
	System.out.println("def cont");
	}
	@Override
	public String toString() {
		return "Student [rollNo=" + rollNo + ", name=" + name + ", address=" + address + "]";
	}
	
	
	
}



----------------------------------------spring.xml 
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

<bean id="student" init-method="myInit" destroy-method="destroy" class="test.wiprospringcc.model.Student" autowire="constructor" scope="singleton">

<constructor-arg index="0" type="" value="18"> </constructor-arg>
<constructor-arg value="virat"> </constructor-arg>

</bean>

<!-- default  no auto wiring  -->
<!-- type -> search for a bean of requiredtype(Address) and inject it  MUST BE ONE QUALIFING BEAN-->
<!-- name -> search for a bean of requiredName(address) and inject it -->

<!-- constructor -> search for a bean of requiredName(address) 
or type Address and inject it (BUT THROUGH CONSTRUCTOR)-->



<bean id="address" class="test.wiprospringcc.model.Address">
<constructor-arg value="pune"> </constructor-arg>
<constructor-arg value="maharastra"> </constructor-arg>

</bean>

<bean id="address1" class="test.wiprospringcc.model.Address">
<constructor-arg value="mumbai"> </constructor-arg>
<constructor-arg value="maharastra"> </constructor-arg>
</bean>


 <context:annotation-config/>  
</beans>








